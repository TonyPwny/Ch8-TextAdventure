#BlueJ class context
comment0.target=Room
comment0.text=\n\ Modification\ of\ "World\ of\ Zuul"\ application\n\ \n\ Modified\ to\ handle\ an\ ArrayList\ of\ Item\ objects\ within\ each\ room.\n\ \n\ @author\ Anthony\ Tiongson\n\ @version\ 2018.11.04\n\ \n\ Original\ credits\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\n\n\ This\ class\ is\ part\ of\ the\ "World\ of\ Zuul"\ application.\ \n\ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ \n\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \n\ stores\ a\ reference\ to\ the\ neighboring\ room.\n\ \n\ @originalAuthor\ \ Michael\ K\u00F6lling\ and\ David\ J.\ Barnes\n\ @originalVersion\ 2011.08.10\n
comment1.params=description
comment1.target=Room(java.lang.String)
comment1.text=\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\n\ "an\ open\ court\ yard".\n\ itemsInRoom\ is\ an\ ArrayList\ of\ Item\ objects\ within\ the\ room.\n\ \n\ @param\ description\ The\ room's\ description.\n
comment10.params=itemID
comment10.target=Item\ getItem(java.lang.String)
comment10.text=\n\ Returns\ an\ Item\ in\ the\ room\ that\ matches\ a\ particular\ item\ id.\n\ \n\ @param\ String\ itemID\ to\ test\ for\ similarity\ in\ item\ id\n\ @return\ Item\ that\ shares\ a\ similir\ item\ id\n
comment11.params=direction
comment11.target=Room\ getExit(java.lang.String)
comment11.text=\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\n\ @param\ direction\ The\ exit's\ direction.\n\ @return\ The\ room\ in\ the\ given\ direction.\n
comment2.params=direction\ neighbor
comment2.target=void\ setExit(java.lang.String,\ Room)
comment2.text=\n\ Define\ an\ exit\ from\ this\ room.\n\ \n\ @param\ direction\ The\ direction\ of\ the\ exit.\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\n
comment3.params=item
comment3.target=void\ setItem(Item)
comment3.text=\n\ Put\ an\ item\ into\ the\ room.\n\ \n\ @param\ Item\ item\ to\ be\ put\ into\ room.\n
comment4.params=item
comment4.target=void\ removeItem(Item)
comment4.text=\n\ Remove\ an\ item\ from\ a\ room.\n\ \n\ @param\ Item\ item\ to\ be\ removed\ from\ a\ room.\n
comment5.params=
comment5.target=java.lang.String\ getShortDescription()
comment5.text=\n\ @return\ The\ short\ description\ of\ the\ room\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\n
comment6.params=
comment6.target=java.lang.String\ getLongDescription()
comment6.text=\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\n\ \ \ \ \ Exits\:\ \ \ north\ west\n\ \ \ \ \ Items\:\ \ \ chocolate\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\ a\ bar\ of\ chocolate\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\ weight\:\ 1\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ @return\ A\ long\ description\ of\ this\ room\n
comment7.params=
comment7.target=java.lang.String\ getExitString()
comment7.text=\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\n\ "Exits\:\ \ north\ west".\n\ \n\ @return\ Details\ of\ the\ room's\ exits.\n
comment8.params=
comment8.target=java.lang.String\ getItemsString()
comment8.text=\n\ Return\ a\ string\ describing\ the\ room's\ items,\ for\ example\n\ "Items\:\ \ \ chocolate\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\ a\ bar\ of\ chocolate\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\ weight\:\ 1".\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ @return\ String\ details\ of\ the\ room's\ items.\n
comment9.params=itemID
comment9.target=boolean\ hasItem(java.lang.String)
comment9.text=\n\ Method\ to\ test\ to\ see\ if\ a\ room\ has\ an\ item\ that\ matches\n\ a\ particular\ item\ id.\n\ \n\ @param\ String\ itemID\ to\ test\ for\ similarity\n\ @return\ true\ if\ a\ match\ is\ found,\ false\ if\ not\n
numComments=12
